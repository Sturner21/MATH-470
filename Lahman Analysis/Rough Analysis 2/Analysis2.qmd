---
title: "Analysis2"
format: html
---

# Load Libraries

```{r}
#| warning: false
library(tidyverse)
library(rstan)
library(Lahman)
```

```{r}
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
```


# Clean Lahman

```{r}
#| message: false

#Creates a DF called "Batting" which has players stats from 1973-2019

#Load the DF's from Lahman directly
Batting <- Lahman::Batting
Teams <- Lahman::Teams
People <- Lahman::People

Batting <- Batting %>% 
  #Minimum year = DH was introduced; maximum year = before COVID
  filter(yearID >= 1973 & yearID <= 2019)

#Filter teams for years considered and select only necessary columns
Teams <- Teams %>% 
  filter(yearID>=1973 & yearID <= 2019) %>% 
  select(yearID, teamID, park)

#Combine current "Batting" and "Teams" DF to associate player with stadium played at
Batting <- Batting %>% 
  right_join(Teams, by = join_by(yearID, teamID))

#Add player's age to the "Batting" DF
Batting <- Batting %>% 
  right_join(Lahman::People, by = join_by(playerID)) %>% 
  mutate(Age = yearID - birthYear, .after=yearID) %>%
  #Don't consider the people who don't have a birthday in the database
  drop_na(Age)

#Make the lgID variable into an index variable
Batting <- Batting %>% 
  mutate(lg = case_when(lgID == "NL" ~ 1,
                        lgID == "AL" ~ 2), .after=lgID)
```

```{r}
#We need to make the data here "slim" like is suggested by McElreath
slim <- list(
  N = nrow(Batting),
  z = n_distinct(Batting %>% pull(yearID)),
  Year = as.integer(Batting %>% pull(yearID) - 1972),
  Age = as.integer(Batting %>% pull(Age)-17),
  LG = as.integer(Batting %>% pull(lg)),
  AB = Batting %>% pull(AB),
  HR = Batting %>% pull(HR),
  SB = Batting %>% pull(SB),
  BirthYear = as.integer(Batting %>% pull(birthYear)-1922)
)
```

```{r}
#Define logit for convenience

inv_logit <- function(p){
  1 / (1 + exp(-p))
}
```

# Theoretical Model

The model used by Fellingham & Fisher (2017) is structured as,

$$
HR_{i,j}|p_{i,j}\sim Binom(AB_{i,j},p_{i,j})\\
logit(p_{i,j})=x_{i,j}\beta_i+\theta_i+\delta_j+\xi_p
$$

Where $\theta_i$ is the effect of decade of birth, $\delta_j$ is the effect of season of play, and $\xi_p$ is the effect of home ballpark.

However, I think that this model could be improved and should be structured as,

$$
HR_{i,j}\sim Binom(AB_{i,j},p_{i,j})\\
logit(p_{i,j})=\beta_1Age+\beta_2Ballpark+\beta_3Year+\beta_4SB+\beta_5(Age\cdot Year)
$$

All of these variables should influence the underlying probability of a player to hit a home run. In addition, I think that Age and Year played will have some sort of interaction effect. Possibly not during the small time frame that we consider here, however over a longer study I believe it should.

# Graphical exploration

Before building a model, we explore the data by graphing the home-run proportion with classical binomial standard errors.

```{r}
Batting_summary <- Batting %>% group_by(Age) %>%
  summarize(HR = sum(HR), AB = sum(AB)) %>%
  mutate(prop = HR / AB, se = sqrt(prop*(1-prop)/AB))

ggplot(data = Batting_summary) +
  geom_pointrange(mapping = aes(x = Age, y = prop, ymin = prop - se,
                                ymax = prop + se))
```
Let's graph again, restricting to players aged 20 to 40.

```{r}
ggplot(data = Batting_summary %>% filter(Age >= 20 & Age <= 40)) +
  geom_pointrange(mapping = aes(x = Age, y = prop, ymin = prop - se,
                                ymax = prop + se))
```
Our first model will include a linear term for age and will be restricted to this age range.

# Simple model

```{r}
Batting_summary_restricted <- Batting_summary %>%
  filter(Age >= 20 & Age <= 40) %>% mutate(c.Age = Age - 30)

simple_data <-   list(
  N = nrow(Batting_summary_restricted),
  Age = Batting_summary_restricted %>% pull(c.Age),
  AB = Batting_summary_restricted %>% pull(AB),
  HR = Batting_summary_restricted %>% pull(HR)
)
```


```{r}
glm(cbind(HR, AB - HR) ~ c.Age, data = Batting_summary_restricted, family = binomial)
```


```{r}
fit_simple <- stan(
  file = "HR2_simple.stan",
  data = simple_data
)
```

```{r}
summary(fit_simple, pars = c("beta0", "beta1"))$summary %>% signif(3)
```
```{r}
plot(fit_simple, pars = c("beta0", "beta1"))
```


# Empirical Model

```{r}
fit1 <- stan(
  file = "HR21.stan",
  data = slim,
  chains = 4,
  warmup = 1000,
  iter = 1000,
  cores = 4,
  refresh = 1000
)
```

```{r}
plot(fit1, pars = "a")
```

```{r}
plot(fit1, pars = "b")
```

```{r}
fit2 <- stan(
  file = "HR22.stan",
  data = slim,
  chains = 1,
  warmup = 1000,
  iter = 4000,
  cores = 1,
  refresh = 1000
)
```

```{r}
plot(fit2, pars = "a")
```

```{r}
plot(fit2, pars = "b")
```

```{r}
plot(fit2, pars = "c")
```
